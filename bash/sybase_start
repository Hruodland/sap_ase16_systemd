#!/bin/bash
#
# vim: set ts=4 sw=4 tw=0 et :
# Startup script for SAP ASE
#  Arguments:
#	$1: start|stop|restart|status
#
# Processname: dataserver
#
#Changes:
#20180123 Switched to sed, faster then grep;Local variables.;error handling fixes.

trap '' EXIT
trap "exit 2" HUP INT QUIT TERM



#Increase Max stack size 
ulimit -s unlimited

readonly SERVER=FLSERVER
readonly SERVERPW=sybase
readonly ADMINUSER=sa

# Source environment variables.
SYBASE=/opt/sybase
. $SYBASE/SYBASE.sh

# Find the name of the script
NAME=$(basename "$0")

die() { err "EXIT: $1" && [[ $2 -ge 0 ]] && exit $2 || exit 1; }  
err() { out "ERROR: $*" 1>&2 ; }
out() { echo "$(date +%Y%m%dT%H%M%S%Z): $*" ; }

if [[ "$(whoami)" != "sybase" ]]; then
        die "Script must be run as user: sybase"  $((1))
fi

dosql() {
    ( echo "${SERVERPW}"
    cat  ) |  isql -b -w9999 -U${ADMINUSER} -S${SERVER} -Dmaster $* |  sed -e '/Password:/d'  
}

echo "${0}" #show scriptname
[[ "$#" -eq 1 ]] || die "1 argument required, $# provided"

start() {
    local SYBASE_START=$"Starting ${NAME} service: "
    ( $SYBASE/$SYBASE_ASE/bin/startserver -f $SYBASE/$SYBASE_ASE/install/RUN_${SERVER} ) > /dev/null 2>&1
    ret=$?
    if [[ $ret -eq 0 ]]
    then
        PID=$(pgrep RUN_${SERVER}\$ | head -1)
        echo "$PID" > /opt/sybase/sybase.pid
        echo "$SYBASE_START Success."
    else
        die "$SYBASE_START Failed!"  $((1)) 
    fi
}


startBS() {
    local SYBASE_START=$"Starting ${NAME} backup service: "
    ( $SYBASE/$SYBASE_ASE/bin/startserver -f $SYBASE/$SYBASE_ASE/install/RUN_${SERVER}_BS ) > /dev/null 2>&1
    ret=$?
    if [[ $ret -eq 0 ]]
    then
        echo "$SYBASE_START Success."
    else
        die "$SYBASE_START Failed!"  $((1)) 
    fi
}


stop() {
    echo -n $"Stopping ${NAME} service: "
    
	dosql <<-ESQL1
        set nocount on
	shutdown SYB_BACKUP
	go
	checkpoint all
	go
	shutdown
	go
	ESQL1
    
    local ret=$?
    if [[ $ret -eq 0 ]]
    then
        echo "Success."
    else
        die "Stop Failed!" $((1))
    fi
}


status() {
    local SYBASE_STATUS="Status: "
    $SYBASE/$SYBASE_ASE/install/showserver
    local ret=$?
    if [[ $ret -ne 0 ]]
    then
        die "Status Failed!" $((1))
    fi
}



restart() {
    stop && start && startBS
}



case "$1" in
    
    start)
        ( start && startBS )
    ;;
    stop)
        stop
    ;;
    restart)
        restart
    ;;
    status)
        status
    ;;
    *)
    echo $"Usage: $0 {start|stop|restart}"
    exit 1
esac
exit 0


#eof
